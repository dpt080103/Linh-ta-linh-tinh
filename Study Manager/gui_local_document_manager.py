import os
import datetime
from tkinter import *
from tkinter import messagebox

# --- C·∫§U H√åNH V√Ä THI·∫æT L·∫¨P TH∆Ø M·ª§C G·ªêC ---
# T√†i li·ªáu s·∫Ω ƒë∆∞·ª£c l∆∞u trong th∆∞ m·ª•c TaiLieuHocTap_App trong th∆∞ m·ª•c ng∆∞·ªùi d√πng c·ªßa b·∫°n.
BASE_DIR = os.path.join(os.path.expanduser("~"), "TaiLieuHocTap_App")


def save_document_locally(subject: str, topic: str, doc_name: str, content: str) -> str:
    """
    T·∫°o c·∫•u tr√∫c th∆∞ m·ª•c v√† l∆∞u n·ªôi dung t√†i li·ªáu v√†o m·ªôt t·ªáp tin c·ª•c b·ªô.
    Tr·∫£ v·ªÅ th√¥ng b√°o k·∫øt qu·∫£.
    """
    if not subject or not topic or not doc_name or not content:
        return "L·ªñI: Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß t·∫•t c·∫£ c√°c tr∆∞·ªùng th√¥ng tin."

    try:
        # 1. ƒê·ªãnh d·∫°ng T√™n T·ªáp v√† ƒê∆∞·ªùng d·∫´n
        today_date = datetime.datetime.now().strftime("%Y-%m-%d")
        
        # Lo·∫°i b·ªè c√°c k√Ω t·ª± kh√¥ng h·ª£p l·ªá cho t√™n th∆∞ m·ª•c v√† t·ªáp
        subject_dir = subject.replace('/', '-').replace('\\', '-').strip()
        topic_dir = topic.replace('/', '-').replace('\\', '-').strip()
        doc_name_clean = doc_name.replace('/', '-').replace('\\', '-').strip()
        
        file_name = f"{doc_name_clean}_{today_date}.txt"
        
        target_dir = os.path.join(BASE_DIR, subject_dir, topic_dir)
        target_filepath = os.path.join(target_dir, file_name)

        # 2. T·∫°o Th∆∞ m·ª•c n·∫øu ch∆∞a t·ªìn t·∫°i (H√†nh ƒë·ªông "T·∫°o th∆∞ m·ª•c" theo y√™u c·∫ßu)
        os.makedirs(target_dir, exist_ok=True)

        # 3. L∆∞u N·ªôi dung v√†o T·ªáp tin
        with open(target_filepath, 'w', encoding='utf-8') as f:
            f.write(f"--- M√îN H·ªåC: {subject} ---\n")
            f.write(f"--- CH·ª¶ ƒê·ªÄ: {topic} ---\n")
            f.write(f"--- T√äN T√ÄI LI·ªÜU: {doc_name} ---\n\n")
            f.write("----------------------------------------\n\n")
            f.write(content)
        
        return f"TH√ÄNH C√îNG: ƒê√£ l∆∞u t√†i li·ªáu t·∫°i:\n{target_filepath}"

    except Exception as e:
        return f"L·ªñI: Kh√¥ng th·ªÉ l∆∞u t√†i li·ªáu. Chi ti·∫øt l·ªói: {e}"


# --- GIAO DI·ªÜN NG∆Ø·ªúI D√ôNG (GUI) ---

class DocumentManagerApp:
    def __init__(self, master):
        self.master = master
        master.title("Qu·∫£n L√Ω T√†i Li·ªáu H·ªçc T·∫≠p C·ª•c B·ªô")
        if os.path.exists("app_icon.ico"):
            master.iconbitmap("app_icon.ico")
        else:
            print("Kh√¥ng t√¨m th·∫•y t·ªáp 'app_icon.ico'. Icon s·∫Ω kh√¥ng ƒë∆∞·ª£c hi·ªÉn th·ªã.")
        master.configure(padx=15, pady=15, background='#f0f0f0')

        # Thi·∫øt l·∫≠p c√°c bi·∫øn cho Entry fields
        self.subject_var = StringVar()
        self.topic_var = StringVar()
        self.doc_name_var = StringVar()

        # Ti√™u ƒë·ªÅ ·ª©ng d·ª•ng
        title_label = Label(master, text="H·ªÜ TH·ªêNG L∆ØU TR·ªÆ T√ÄI LI·ªÜU H·ªåC T·∫¨P", 
                            font=("Arial", 16, "bold"), fg="#1e3a8a", bg='#f0f0f0', pady=10)
        title_label.grid(row=0, column=0, columnspan=2, sticky="ew")

        # --- C√°c tr∆∞·ªùng nh·∫≠p li·ªáu ---
        current_row = 1
        
        # M√¥n H·ªçc
        Label(master, text="1. M√¥n H·ªçc:", font=("Arial", 10, "bold"), bg='#f0f0f0').grid(row=current_row, column=0, sticky="w", pady=5)
        Entry(master, textvariable=self.subject_var, width=50, bd=2, relief="groove").grid(row=current_row, column=1, sticky="ew", padx=10, pady=5)
        current_row += 1
        
        # Ch·ªß ƒê·ªÅ (M·ª•c)
        Label(master, text="2. Ch·ªß ƒê·ªÅ/M·ª•c:", font=("Arial", 10, "bold"), bg='#f0f0f0').grid(row=current_row, column=0, sticky="w", pady=5)
        Entry(master, textvariable=self.topic_var, width=50, bd=2, relief="groove").grid(row=current_row, column=1, sticky="ew", padx=10, pady=5)
        current_row += 1

        # T√™n T√†i Li·ªáu
        Label(master, text="3. T√™n T√†i Li·ªáu:", font=("Arial", 10, "bold"), bg='#f0f0f0').grid(row=current_row, column=0, sticky="w", pady=5)
        Entry(master, textvariable=self.doc_name_var, width=50, bd=2, relief="groove").grid(row=current_row, column=1, sticky="ew", padx=10, pady=5)
        current_row += 1

        # N·ªôi Dung T√†i Li·ªáu
        Label(master, text="4. N·ªôi Dung:", font=("Arial", 10, "bold"), bg='#f0f0f0').grid(row=current_row, column=0, sticky="nw", pady=10)
        self.content_text = Text(master, wrap=WORD, width=60, height=15, bd=2, relief="groove", font=("Arial", 10))
        self.content_text.grid(row=current_row, column=1, sticky="ew", padx=10, pady=10)
        current_row += 1
        
        # --- Thanh cu·ªôn cho N·ªôi Dung ---
        scrollbar = Scrollbar(master, command=self.content_text.yview)
        self.content_text['yscrollcommand'] = scrollbar.set
        scrollbar.grid(row=current_row-1, column=2, sticky='ns')

        # --- N√∫t L∆∞u T√†i Li·ªáu ---
        save_button = Button(master, text="üíæ L∆ØU T√ÄI LI·ªÜU (T·∫°o Th∆∞ M·ª•c)", command=self.save_action, 
                             font=("Arial", 12, "bold"), bg="#10b981", fg="white", 
                             activebackground="#059669", activeforeground="white", 
                             pady=8, relief="raised", bd=3)
        save_button.grid(row=current_row, column=0, columnspan=2, pady=15, sticky="ew")
        current_row += 1

        # --- Khu v·ª±c hi·ªÉn th·ªã Tr·∫°ng th√°i/K·∫øt qu·∫£ ---
        self.status_label = Label(master, text=f"Th∆∞ m·ª•c g·ªëc: {BASE_DIR}", 
                                  font=("Arial", 9), fg="#4b5563", bg='#f0f0f0', wraplength=500, justify=LEFT)
        self.status_label.grid(row=current_row, column=0, columnspan=2, sticky="ew", pady=5)

    def save_action(self):
        """ L·∫•y d·ªØ li·ªáu t·ª´ giao di·ªán v√† g·ªçi h√†m l∆∞u tr·ªØ c·ª•c b·ªô. """
        subject = self.subject_var.get()
        topic = self.topic_var.get()
        doc_name = self.doc_name_var.get()
        content = self.content_text.get("1.0", END).strip()

        result_message = save_document_locally(subject, topic, doc_name, content)
        
        # C·∫≠p nh·∫≠t nh√£n tr·∫°ng th√°i
        self.status_label.config(text=result_message)
        
        if "TH√ÄNH C√îNG" in result_message:
            # Th√¥ng b√°o th√†nh c√¥ng v√† x√≥a n·ªôi dung (tr·ª´ M√¥n h·ªçc/Ch·ªß ƒë·ªÅ)
            messagebox.showinfo("Th√†nh C√¥ng", "ƒê√£ l∆∞u t√†i li·ªáu th√†nh c√¥ng!")
            self.doc_name_var.set("")
            self.content_text.delete("1.0", END)
            self.status_label.config(fg="#047857")
        else:
            messagebox.showerror("L·ªói L∆∞u Tr·ªØ", result_message)
            self.status_label.config(fg="#dc2626")


if __name__ == "__main__":
    # Kh·ªüi t·∫°o c·ª≠a s·ªï ch√≠nh
    root = Tk()
    # Cho ph√©p c·ª≠a s·ªï thay ƒë·ªïi k√≠ch th∆∞·ªõc theo chi·ªÅu ngang
    root.grid_columnconfigure(1, weight=1) 
    
    # Ch·∫°y ·ª©ng d·ª•ng
    app = DocumentManagerApp(root)
    root.mainloop()
